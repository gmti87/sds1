{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\ws-sts devsuperior\\\\dspesquisa\\\\front-mobile2\\\\src\\\\pages\\\\CreateRecord\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesome5 as _Icon } from '@expo/vector-icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Header from \"../../components/Header\";\nimport PlatformCard from \"./PlatformCard\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport axios from 'axios';\nimport { RectButton } from 'react-native-gesture-handler';\nvar placeholder = {\n  label: 'Selecione o game',\n  Value: null\n};\nvar BASE_URL = 'http://192.168.1.2:8080';\n\nvar mapSelecteValues = function mapSelecteValues(games) {\n  return games.map(function (game) {\n    return _objectSpread(_objectSpread({}, game), {}, {\n      label: game.title,\n      value: game.id\n    });\n  });\n};\n\nvar CreateRecord = function CreateRecord() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      platform = _useState6[0],\n      setPlatform = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedGame = _useState8[0],\n      setSelectedGame = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      allGames = _useState10[0],\n      setAllGames = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filteredGames = _useState12[0],\n      setFitleredGames = _useState12[1];\n\n  var handleChangePlatform = function handleChangePlatform(selectedPlatform) {\n    setPlatform(selectedPlatform);\n    var gamesByPlatform = allGames.filter(function (game) {\n      return game.platform = selectedPlatform;\n    });\n    setFitleredGames(gamesByPlatform);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var payload = {\n      name: name,\n      age: age,\n      gameId: selectedGame\n    };\n    axios.post(BASE_URL + \"/records\", payload).then(function () {\n      Alert.alert('Dados salvos com sucesso!');\n      setName('');\n      setAge('');\n      setSelectedGame('');\n      setPlatform(undefined);\n    }).catch(function () {\n      return Alert.alert('Erro ao salvar as informações!');\n    });\n  };\n\n  useEffect(function () {\n    axios.get(BASE_URL + \"/games\").then(function (response) {\n      var selectValues = mapSelecteValues(response.data);\n      setAllGames(selectValues);\n      console.log(selectValues);\n      setAllGames(selectValues);\n    }).catch(function () {\n      return Alert.alert('Erro ao listar os jogos!');\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Nome\",\n    placeholderTextColor: \"#9E9E9E\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: styles.inputText,\n    placeholder: \"idade\",\n    placeholderTextColor: \"#9E9E9\\xCB\",\n    maxLength: 3,\n    onChangeText: function onChangeText(text) {\n      return setAge(text);\n    },\n    value: age,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.platformContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(PlatformCard, {\n    platform: \"PC\",\n    icon: \"laptop\",\n    onChange: handleChangePlatform,\n    activePlatform: platform,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), React.createElement(PlatformCard, {\n    platform: \"XBOX\",\n    icon: \"xbox\",\n    onChange: handleChangePlatform,\n    activePlatform: platform,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), React.createElement(PlatformCard, {\n    platform: \"PLAYSTATION\",\n    icon: \"playstation\",\n    onChange: handleChangePlatform,\n    activePlatform: platform,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      setSelectedGame(value);\n    },\n    placeholder: placeholder,\n    value: selectedGame,\n    items: filteredGames,\n    style: pickerSelectStyles,\n    Icon: function Icon() {\n      return React.createElement(_Icon, {\n        name: \"chevron-down\",\n        color: \"#9E9E9E\",\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 24\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(RectButton, {\n    style: styles.button,\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Salvar\")))));\n};\n\nvar pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    fontSize: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    backgroundColor: '#FFF',\n    borderRadius: 10,\n    color: '#ED7947',\n    paddingRight: 30,\n    fontFamily: \"Play_700Bold\",\n    height: 50\n  },\n  inputAndroid: {\n    fontSize: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    backgroundColor: '#FFF',\n    borderRadius: 10,\n    color: '#ED7947',\n    paddingRight: 30,\n    fontFamily: \"Play_700Bold\",\n    height: 50\n  },\n  placeholder: {\n    color: '#9E9E9E',\n    fontSize: 16,\n    fontFamily: \"Play_700Bold\"\n  },\n  iconContainer: {\n    top: 10,\n    right: 12\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: '15%',\n    paddingRight: '5%',\n    paddingLeft: '5%',\n    paddingBottom: 50\n  },\n  inputText: {\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 10,\n    color: '#ED7947',\n    fontFamily: \"Play_700Bold\",\n    fontSize: 16,\n    paddingLeft: 20,\n    marginBottom: 21\n  },\n  platformContainer: {\n    marginBottom: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  footer: {\n    marginTop: '15%',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#00D4FF',\n    flexDirection: 'row',\n    borderRadius: 10,\n    height: 60,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: \"Play_700Bold\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: '#0B1F34'\n  }\n});\nexport default CreateRecord;","map":{"version":3,"sources":["C:/ws-sts devsuperior/dspesquisa/front-mobile2/src/pages/CreateRecord/index.tsx"],"names":["React","useState","useEffect","FontAwesome5","Icon","Header","PlatformCard","RNPickerSelect","axios","RectButton","placeholder","label","Value","BASE_URL","mapSelecteValues","games","map","game","title","value","id","CreateRecord","name","setName","age","setAge","platform","setPlatform","selectedGame","setSelectedGame","allGames","setAllGames","filteredGames","setFitleredGames","handleChangePlatform","selectedPlatform","gamesByPlatform","filter","handleSubmit","payload","gameId","post","then","Alert","alert","undefined","catch","get","response","selectValues","data","console","log","styles","container","inputText","text","platformContainer","pickerSelectStyles","footer","button","buttonText","StyleSheet","create","inputIOS","fontSize","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","color","paddingRight","fontFamily","height","inputAndroid","iconContainer","top","right","marginTop","paddingLeft","paddingBottom","marginBottom","flexDirection","justifyContent","alignItems","width","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesome5 as Icon } from '@expo/vector-icons';\r\nimport { StyleSheet, View, TextInput, Text, Alert } from 'react-native'; \r\nimport Header from '../../components/Header';\r\nimport PlatformCard from './PlatformCard';\r\nimport { GamePlatform, Game } from './types';\r\nimport RNPickerSelect from 'react-native-picker-select'; \r\nimport axios from 'axios';\r\nimport { RectButton } from 'react-native-gesture-handler';\r\n\r\nconst placeholder = {\r\n  label: 'Selecione o game',\r\n  Value: null\r\n}\r\n\r\nconst BASE_URL = 'http://192.168.1.2:8080';\r\n\r\nconst mapSelecteValues = (games: Game[]) => {\r\n  return games.map(game => ({\r\n    ...game,\r\n    label: game.title,\r\n    value: game.id\r\n  }));\r\n}\r\n\r\nconst CreateRecord = () => {\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const [age, setAge] = useState('');\r\n\r\n  const [platform, setPlatform] = useState<GamePlatform>();\r\n\r\n  const [selectedGame, setSelectedGame] = useState('');\r\n\r\n  const [allGames, setAllGames] = useState<Game[]>([]);\r\n\r\n  const [filteredGames, setFitleredGames ] = useState<Game[]>([]);\r\n\r\n  const handleChangePlatform = (selectedPlatform: GamePlatform) => {\r\n    setPlatform(selectedPlatform);\r\n    const gamesByPlatform = allGames.filter(\r\n      game => game.platform = selectedPlatform\r\n    )\r\n    setFitleredGames(gamesByPlatform);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const payload = { name, age, gameId: selectedGame};\r\n\r\n    axios.post(`${BASE_URL}/records`, payload)\r\n      .then(() => {\r\n        Alert.alert('Dados salvos com sucesso!');\r\n        setName('');\r\n        setAge('');\r\n        setSelectedGame('');\r\n        setPlatform(undefined);\r\n      })\r\n      .catch(() => Alert.alert('Erro ao salvar as informações!'))\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/games`)\r\n      .then(response => {\r\n        const selectValues = mapSelecteValues(response.data);\r\n        setAllGames(selectValues);\r\n        console.log(selectValues);\r\n\r\n        setAllGames(selectValues);\r\n      })\r\n      .catch(() => Alert.alert('Erro ao listar os jogos!'))\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n        <View style={styles.container}>\r\n            <TextInput\r\n              style={styles.inputText}\r\n              placeholder=\"Nome\"\r\n              placeholderTextColor=\"#9E9E9E\"\r\n              onChangeText={text => setName(text)}\r\n              value={name}\r\n            />\r\n            <TextInput\r\n              keyboardType=\"numeric\"\r\n              style={styles.inputText}\r\n              placeholder=\"idade\"\r\n              placeholderTextColor=\"#9E9E9Ë\"\r\n              maxLength={3}\r\n              onChangeText={text => setAge(text)}\r\n              value={age}\r\n            />\r\n          <View style={styles.platformContainer}>\r\n            <PlatformCard\r\n              platform=\"PC\"\r\n              icon=\"laptop\"\r\n              onChange={handleChangePlatform}\r\n              activePlatform={platform}\r\n            />\r\n            <PlatformCard \r\n              platform=\"XBOX\"\r\n              icon=\"xbox\"\r\n              onChange={handleChangePlatform}\r\n              activePlatform={platform}\r\n            />\r\n            <PlatformCard \r\n              platform=\"PLAYSTATION\"\r\n              icon=\"playstation\"\r\n              onChange={handleChangePlatform}\r\n              activePlatform={platform}\r\n            />\r\n          </View>\r\n          <RNPickerSelect\r\n            onValueChange={value => {\r\n              setSelectedGame(value);\r\n              }}\r\n              placeholder={placeholder}\r\n              value={selectedGame}\r\n              items={filteredGames}\r\n              style={pickerSelectStyles}\r\n              Icon={() => {\r\n                return <Icon name=\"chevron-down\" color='#9E9E9E' size={25}/>\r\n              }}\r\n          />\r\n          <View style={styles.footer}>\r\n            <RectButton style={styles.button} onPress={handleSubmit}>\r\n              <Text style={styles.buttonText}>\r\n                Salvar\r\n              </Text>\r\n            </RectButton>\r\n          </View>\r\n        </View>\r\n    </>\r\n    );\r\n}\r\n\r\nconst pickerSelectStyles = StyleSheet.create({\r\n  inputIOS: {\r\n    fontSize: 16,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 10,\r\n    color: '#ED7947',\r\n    paddingRight: 30,\r\n    fontFamily: \"Play_700Bold\",\r\n    height: 50\r\n  },\r\n  inputAndroid: {\r\n    fontSize: 16,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 10,\r\n    color: '#ED7947',\r\n    paddingRight: 30,\r\n    fontFamily: \"Play_700Bold\",\r\n    height: 50,\r\n  },\r\n  placeholder: {\r\n    color: '#9E9E9E',\r\n    fontSize: 16,\r\n    fontFamily: \"Play_700Bold\",\r\n  },\r\n  iconContainer: {\r\n    top: 10,\r\n    right: 12,\r\n  }\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      marginTop: '15%',\r\n      paddingRight: '5%',\r\n      paddingLeft: '5%',\r\n      paddingBottom: 50\r\n    },\r\n    inputText: {\r\n      height: 50,\r\n      backgroundColor: '#FFF',\r\n      borderRadius: 10,\r\n      color: '#ED7947',\r\n      fontFamily: \"Play_700Bold\",\r\n      fontSize: 16,\r\n      paddingLeft: 20,\r\n      marginBottom: 21\r\n    },\r\n    platformContainer: {\r\n      marginBottom: 20,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n    },\r\n    footer: {\r\n      marginTop: '15%',\r\n      alignItems: 'center',\r\n    },\r\n    button: {\r\n      backgroundColor: '#00D4FF',\r\n      flexDirection: 'row',\r\n      borderRadius: 10,\r\n      height: 60,\r\n      width: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n      fontFamily: \"Play_700Bold\",\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n      color: '#0B1F34',\r\n    }\r\n});\r\n\r\nexport default CreateRecord;"]},"metadata":{},"sourceType":"module"}